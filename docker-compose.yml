version: '3.8'

services:
  # Node.js application service
  aviationstack-app:
    container_name: aviationstack-app
    build:
      context: .
      dockerfile: Dockerfile
      target: app
    environment:
      - NODE_ENV=production
      - PORT=3000
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - aviation-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  aviationstack-nginx:
    container_name: aviationstack-nginx
    image: nginx:1.25-alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - aviationstack-app
    restart: unless-stopped
    networks:
      - aviation-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development override
  aviationstack-app-dev:
    profiles:
      - dev
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - aviation-network

networks:
  aviation-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16